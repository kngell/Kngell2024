@use "css/backend/admin/abstracts/variables" as *;
@use "css/backend/admin/abstracts/mixins/miscellaneous" as *;
@use "css/backend/admin/abstracts/functions" as *;

/// ------------------------------
/// Base button reset
/// ------------------------------
@mixin button-base($gap: 0.8rem) {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: $gap;

  border: none;
  cursor: pointer;
  text-decoration: none;
  line-height: 1.2;

  transition: background-color 0.2s ease, color 0.2s ease, box-shadow 0.2s ease;
}

/// ------------------------------
/// Button variant styles
/// Apply variant styles from $button-variants
/// ------------------------------
@mixin button-variant($variant: primary) {
  $bg: map-deep-get-list($button-variants, ($variant, background), transparent);
  $color: map-deep-get-list($button-variants, ($variant, color), currentColor);
  $hover-bg: map-deep-get-list($button-variants, ($variant, hover-background), $bg);
  $hover-color: map-deep-get-list($button-variants, ($variant, hover-color), $color);
  $border: map-deep-get-list($button-variants, ($variant, border), none);
  $radius: map-deep-get-list($button-variants, ($variant, radius), map-deep-get($radius, m));
  $shadow: map-deep-get-list($button-variants, ($variant, shadow), none);

  background: $bg;
  color: $color;
  border: $border;
  border-radius: $radius;
  box-shadow: $shadow;

  &:hover {
    background: $hover-bg;
    color: $hover-color;
  }
}

/// ------------------------------
/// Button label
/// Apply typography from variant
/// ------------------------------
@mixin button-label($variant: primary) {
  $typography: map-deep-get-list($button-variants, ($variant, typography), null);
  @if $typography != null {
    font-family: map-deep-get($typography, font-family);
    font-weight: map-deep-get($typography, font-weight);
    font-size: map-deep-get($typography, font-size);
    line-height: map-deep-get($typography, line-height);
    letter-spacing: map-deep-get($typography, letter-spacing);
    color: inherit;
  }
}

/// ------------------------------
/// Button size styles
/// Apply padding and font-size from $button-sizes
/// ------------------------------
@mixin button-size($size: md) {
  $padding-y: map-deep-get-list($button-sizes, ($size, padding-y), 1rem);
  $padding-x: map-deep-get-list($button-sizes, ($size, padding-x), 2rem);
  $icon-size: map-deep-get-list($button-sizes, ($size, icon-size), 1.6rem);

  padding: #{$padding-y} #{$padding-x};

  // Store icon-size in a custom property for child usage
  --btn-icon-size: #{$icon-size};
}

/// ------------------------------
/// Icon position styles
/// Add to .btn__icon
/// ------------------------------
@mixin button-icon {
  width: var(--btn-icon-size);
  height: var(--btn-icon-size);
  display: inline-flex;
  align-items: center;
  justify-content: center;

  .icon {
    width: 100%;
    height: 100%;
    color: currentColor;
  }
}

/// ------------------------------
/// Only icon modifier
/// ------------------------------
@mixin button-icon-only {
  $size: md !default;
  $padding-y: map-deep-get-list($button-sizes, ($size, padding-y), 1rem);
  padding: $padding-y;
  aspect-ratio: 1 / 1;

  .btn__label {
    display: none;
  }
}
